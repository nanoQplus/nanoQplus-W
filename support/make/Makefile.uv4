# -*- mode:Makefile; -*-
###############################################################################
# Flash downloader configuration for Keil uVision4 ARM-MDK                    #
# Author: Jongsoo Jeong (ETRI)                                                #
# Created: 2013. 2. 25.                                                       #
#                                                                             #
# This Makefile is included by $(NOS_HOME)/nos/arch/$(MCU)/Makefile.build     #
###############################################################################

UV4="$(KEIL_HOME)/UV4/Uv4.exe"
FROMELF="$(KEIL_HOME)/ARM/ARMCC/bin/fromelf.exe"

# Actual file name generated by Keil uV4.
OUTPUT=$(TRG)-main

INCLUDES+=$(PWD) $(NOSDIR)

ifneq ($(id),)
	PREDEFINES+=NODE_ID=$(id)
endif

NOS_SRCFILES=$(foreach dir,$(NOSDIR),$(wildcard $(dir)/*.[cs]))
APP_SRCFILES=$(wildcard $(PWD)/*.c)
LIBFILES=$(addsuffix .lib,$(addprefix $(NOS_HOME)/lib/$(MCU_CLASS)/armcc/lib,$(LIB)))

ifeq ($(wildcard $(PWD)/appdir.list),$(PWD)/appdir.list)
	APP_SRCFILES+=$(foreach dir, $(addprefix $(PWD)/, $(shell cat $(PWD)/appdir.list)), $(wildcard $(dir)/*.c))
	INCLUDES+=$(addprefix $(PWD)/, $(shell cat $(PWD)/appdir.list))
endif

# Common XML path
XPATH_TARGET=/Project/Targets/Target
XPATH_TARGET_COMMON_OPT=$(XPATH_TARGET)/TargetOption/TargetCommonOption
XPATH_DEBUG_OPT=$(XPATH_TARGET)/TargetOption/DebugOption
XPATH_UTIL=$(XPATH_TARGET)/TargetOption/Utilities
XPATH_TARGET_ARM_ADS_MISC=$(XPATH_TARGET)/TargetOption/TargetArmAds/ArmAdsMisc
XPATH_TARGET_CADS_CTRL=$(XPATH_TARGET)/TargetOption/TargetArmAds/Cads/VariousControls

all : cygwin_check pkg_check $(TRG).uvproj
	@echo
	@echo "Building the $(TRG) project..."
	-@$(UV4) -b $(TRG).uvproj -j0 -o log
	@echo "### BUILD LOG ###"
	@grep -e 'error\|warning\|Error' log
	@if [ ! -f $(OUTPUT).axf ];\
	then\
		false;\
	fi
	@$(FROMELF) --bin $(OUTPUT).axf --output $(OUTPUT).bin
	@$(MV) $(OUTPUT).bin $(PWD)/$(TRG).bin
	@$(MV) $(OUTPUT).map $(PWD)/$(TRG).map
	@echo "### NOTE ###"
	@echo "- '$(TRG).bin' has been created."
	@grep 'Program Size' log

cygwin_check :
ifneq ($(findstring CYGWIN, $(shell uname)),CYGWIN)
	@echo
	@echo "### NOTE ###"
	@echo "Building applications using Keil uVision4 requires Cygwin environment."
	@echo
	@false
endif
ifneq ($(SUPPORT_DIR),)
	@if [ ! -d $(SUPPORT_DIR) ]; then \
		make -C $(NOS_HOME)/support/stm32 $(MCU);\
	fi
endif

libs:
	@make -s -C $(NOS_HOME)/lib/$(MCU_CLASS)/armcc

$(TRG).uvproj : $(PWD)/kconf.h
	@rm -rf *
	@echo
	@echo "Making the $(TRG) project..."	
	@$(CP) $(NOS_HOME)/support/make/keil_for_nos.uvproj.template $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET)/TargetName" -v "$(TRG)" $(TRG).uvproj.tmp > tmp0;\
		$(CP) tmp0 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/OutputName" -v "$(OUTPUT)" $(TRG).uvproj.tmp > tmp1;\
		$(CP) tmp1 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/Device" -v "$(CONFIG_PART_NAME)" $(TRG).uvproj.tmp > tmp2;\
		$(CP) tmp2 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/Vendor" -v "$(UV4_VENDOR)" $(TRG).uvproj.tmp > tmp3;\
		$(CP) tmp3 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/Cpu" -v '$(UV4_CPU)' $(TRG).uvproj.tmp > tmp4;\
		$(CP) tmp4 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/StartupFile" -v '$(UV4_STARTUP_FILE)' $(TRG).uvproj.tmp > tmp5;\
		$(CP) tmp5 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/FlashDriverDll" -v '$(UV4_FLASH_DRIVER_DLL)' $(TRG).uvproj.tmp > tmp6;\
		$(CP) tmp6 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/DeviceId" -v "$(UV4_DEVICE_ID)" $(TRG).uvproj.tmp > tmp7;\
		$(CP) tmp7 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/RegisterFile" -v "$(UV4_REGISTER_FILE)" $(TRG).uvproj.tmp > tmp8;\
		$(CP) tmp8 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/SFDFile" -v "$(UV4_SFD_FILE)" $(TRG).uvproj.tmp > tmp9;\
		$(CP) tmp9 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/RegisterFilePath" -v "$(UV4_REGISTER_FILE_PATH)" $(TRG).uvproj.tmp > tmp10;\
		$(CP) tmp10 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_COMMON_OPT)/DBRegisterFilePath" -v "$(UV4_DB_REGISTER_FILE_PATH)" $(TRG).uvproj.tmp > tmp11;\
		$(CP) tmp11 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_DEBUG_OPT)/TargetDlls/Driver" -v "$(UV4_DBG_DLL)" $(TRG).uvproj.tmp > tmp12;\
		$(CP) tmp12 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_UTIL)/Flash2" -v "$(UV4_DBG_DLL)" $(TRG).uvproj.tmp > tmp13;\
		$(CP) tmp13 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/AdsCpuType" -v '$(UV4_ADS_CPU_TYPE)' $(TRG).uvproj.tmp > tmp14;\
		$(CP) tmp14 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/OnChipMemories/IRAM/StartAddress" -v "$(RAM_START_ADDRESS)" $(TRG).uvproj.tmp > tmp15;\
		$(CP) tmp15 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/OnChipMemories/IRAM/Size" -v "$(RAM_SIZE)" $(TRG).uvproj.tmp > tmp16;\
		$(CP) tmp16 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/OnChipMemories/IROM/StartAddress" -v "$(ROM_START_ADDRESS)" $(TRG).uvproj.tmp > tmp17;\
		$(CP) tmp17 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/OnChipMemories/IROM/Size" -v "$(ROM_SIZE)" $(TRG).uvproj.tmp > tmp18;\
		$(CP) tmp18 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/OnChipMemories/OCR_RVCT4/StartAddress" -v "$(ROM_START_ADDRESS)" $(TRG).uvproj.tmp > tmp19;\
		$(CP) tmp19 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/OnChipMemories/OCR_RVCT4/Size" -v "$(ROM_SIZE)" $(TRG).uvproj.tmp > tmp20;\
		$(CP) tmp20 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/OnChipMemories/OCR_RVCT9/StartAddress" -v "$(RAM_START_ADDRESS)" $(TRG).uvproj.tmp > tmp21;\
		$(CP) tmp21 $(TRG).uvproj.tmp
	@xmlstarlet ed --update "$(XPATH_TARGET_ARM_ADS_MISC)/OnChipMemories/OCR_RVCT9/Size" -v "$(RAM_SIZE)" $(TRG).uvproj.tmp > tmp22;\
		$(CP) tmp22 $(TRG).uvproj.tmp

	@echo
	@echo "Adding predefines..."
	@for d in $(PREDEFINES);\
	do \
		tmp=`xmlstarlet select -t --value-of "$(XPATH_TARGET_CADS_CTRL)/Define" $(TRG).uvproj.tmp`;\
		echo " $$d";\
		tmp=`echo $$tmp,$$d`;\
		xmlstarlet ed --inplace --update "$(XPATH_TARGET_CADS_CTRL)/Define" -v "$$tmp" $(TRG).uvproj.tmp;\
	done

	@echo
	@echo "Adding include paths..."
	@for d in $(INCLUDES);\
	do\
		tmp=`xmlstarlet select -t --value-of "$(XPATH_TARGET_CADS_CTRL)/IncludePath" $(TRG).uvproj.tmp`;\
		wd=`cygpath -a -m "$$d"`;\
		echo " $$wd";\
		if [ "$$tmp" != "" ];\
		then\
			tmp=`echo $$tmp\;$$wd`;\
		else\
			tmp=$$wd;\
		fi;\
		xmlstarlet ed --inplace --update "$(XPATH_TARGET_CADS_CTRL)/IncludePath" -v "$$tmp" $(TRG).uvproj.tmp ;\
	done

	@echo
	@echo "Adding support source files..."
	@for f in $(SUPPORT_SRCFILES);\
	do\
		wf=`cygpath -a -m $$f`;\
		wf_basename=`basename $$wf`;\
		echo " $$wf_basename";\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Support']/Files" -t elem -n "File" -v "" $(TRG).uvproj.tmp;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Support']/Files/File[last()]" -t elem -n "FileName" -v "$$wf_basename" $(TRG).uvproj.tmp;\
		ext=`echo $$wf_basename | sed 's/^.*\.//'`;\
		if [ "$$ext" = "c" ];\
		then\
			filetype=1;\
		elif [ "$$ext" = "s" ];\
		then\
			filetype=2;\
		else\
			filetype=0;\
		fi;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Support']/Files/File[FileName='$$wf_basename']" -t elem -n "FileType" -v "$$filetype" $(TRG).uvproj.tmp;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Support']/Files/File[FileName='$$wf_basename']" -t elem -n "FilePath" -v "$$wf" $(TRG).uvproj.tmp;\
	done

	@echo
	@echo "Adding NanoQplus source files..."
	@for f in $(NOS_SRCFILES);\
	do\
		wf=`cygpath -a -m $$f`;\
		wf_basename=`basename $$wf`;\
		echo " $$wf_basename";\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='NanoQplus']/Files" -t elem -n "File" -v "" $(TRG).uvproj.tmp;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='NanoQplus']/Files/File[last()]" -t elem -n "FileName" -v "$$wf_basename" $(TRG).uvproj.tmp;\
		ext=`echo $$wf_basename | sed 's/^.*\.//'`;\
		if [ "$$ext" = "c" ];\
		then\
			filetype=1;\
		elif [ "$$ext" = "s" ];\
		then\
			filetype=2;\
		else\
			filetype=0;\
		fi;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='NanoQplus']/Files/File[FileName='$$wf_basename']" -t elem -n "FileType" -v "$$filetype" $(TRG).uvproj.tmp;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='NanoQplus']/Files/File[FileName='$$wf_basename']" -t elem -n "FilePath" -v "$$wf" $(TRG).uvproj.tmp;\
	done

	@echo
	@echo "Adding application source files..."
	@for f in $(APP_SRCFILES);\
	do\
		wf=`cygpath -a -m $$f`;\
		wf_basename=`basename $$wf`;\
		echo " $$wf_basename";\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Application']/Files" -t elem -n "File" -v "" $(TRG).uvproj.tmp;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Application']/Files/File[last()]" -t elem -n "FileName" -v "$$wf_basename" $(TRG).uvproj.tmp;\
		ext=`echo $$wf_basename | sed 's/^.*\.//'`;\
		if [ "$$ext" = "c" ];\
		then\
			filetype=1;\
		elif [ "$$ext" = "s" ];\
		then\
			filetype=2;\
		else\
			filetype=0;\
		fi;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Application']/Files/File[FileName='$$wf_basename']" -t elem -n "FileType" -v "$$filetype" $(TRG).uvproj.tmp;\
		xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Application']/Files/File[FileName='$$wf_basename']" -t elem -n "FilePath" -v "$$wf" $(TRG).uvproj.tmp;\
	done

	@echo
	@echo "Adding libraries..."
	@for f in $(LIBFILES);\
	do\
		if [ -f $$f ];\
		then\
			wf=`cygpath -a -m $$f`;\
			wf_basename=`basename $$wf`;\
			echo " $$wf_basename";\
			xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Library']/Files" -t elem -n "File" -v "" $(TRG).uvproj.tmp;\
			xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Library']/Files/File[last()]" -t elem -n "FileName" -v "$$wf_basename" $(TRG).uvproj.tmp;\
			xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Library']/Files/File[FileName='$$wf_basename']" -t elem -n "FileType" -v "4" $(TRG).uvproj.tmp;\
			xmlstarlet ed --inplace --subnode "$(XPATH_TARGET)/Groups/Group[GroupName='Library']/Files/File[FileName='$$wf_basename']" -t elem -n "FilePath" -v "$$wf" $(TRG).uvproj.tmp;\
		fi;\
	done

	@$(MV) $(TRG).uvproj.tmp $(TRG).uvproj

print :
	@echo "PWD: $(PWD)"
	@echo "APP_SRCFILES: $(APP_SRCFILES)"
	@echo "PREDEFINES: $(PREDEFINES)"
	@echo "INCLUDES: $(INCLUDES)"

toolchain_check :
ifeq ($(shell which $(shell cygpath $(UV4))),)
	@echo "'$(UV4)' is not found."
	@false
endif
ifeq ($(shell which $(shell cygpath $(FROMELF))),)
	@echo "'$(FROMELF)' is not found."
	@false
endif
